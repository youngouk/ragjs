version: '3.8'

services:
  # Simple RAG Node.js Backend
  simple-rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: simple-rag-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - SERVER_PORT=8000
      - SERVER_HOST=0.0.0.0
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173
      - QDRANT_URL=http://qdrant:6333
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - qdrant
    networks:
      - simple-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: simple-rag-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - simple-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis (Optional - for session management)
  redis:
    image: redis:7.2-alpine
    container_name: simple-rag-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - simple-rag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Optional - Reverse Proxy)
  nginx:
    image: nginx:1.25-alpine
    container_name: simple-rag-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - simple-rag-api
    networks:
      - simple-rag-network
    profiles:
      - nginx

volumes:
  qdrant_data:
    driver: local
  redis_data:
    driver: local

networks:
  simple-rag-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16